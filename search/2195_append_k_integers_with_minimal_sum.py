from tracemalloc import reset_peak
from matplotlib.pyplot import step
from pyparsing import rest_of_line
import pysnooper
from typing import List
@pysnooper.snoop()

class Solution:
    @pysnooper.snoop()
    def minimalKSum(self, nums: List[int], k: int) -> int:
        ans=0
        pre_index=0
        current_index=1
        rest_k=k
        sorted_nums=[0]+sorted(nums)
        pre_value,cur_value=sorted_nums[0],sorted_nums[1]
        while current_index<len(sorted_nums) and rest_k >0:
            pre_value,cur_value=sorted_nums[pre_index],sorted_nums[current_index]
            step_value= cur_value-pre_value-1
            if step_value>rest_k:
                return ans+ (pre_value+1)*rest_k+ rest_k*(rest_k-1)//2
            elif step_value>0:
                ans=step_value*(pre_value+cur_value)//2+ans
                rest_k=rest_k-step_value
            else:
                pass 
            pre_index=current_index
            current_index=current_index+1
        if rest_k>0:
            ans=(cur_value+1)*rest_k+rest_k*(rest_k-1)//2+ans 
        return ans 
            

class Solution_time_limmit:
    @pysnooper.snoop()
    def minimalKSum(self, nums: List[int], k: int) -> int:
        ans=0
        beg_insert_value=1
        nums_index=0
        nums=sorted(nums)
        while nums_index<len(nums) and k>0:
            if beg_insert_value<nums[nums_index]:
                k=k-1
                ans=beg_insert_value+ans
                beg_insert_value+=1
            elif beg_insert_value==nums[nums_index]:# nums[nums_index]==nums[nums_index]+1
                beg_insert_value=nums[nums_index]+1
                nums_index+=1
            else:
                nums_index+=1   
        if k!=0:
            ans=beg_insert_value*k+ans+k*(k-1)//2
        return ans 

solution_instance=Solution()
res=solution_instance.minimalKSum([53,41,90,33,84,26,50,32,63,47,66,43,29,88,71,28,83],76)
print(res)
a= [26, 28, 29, 32, 33, 41, 43, 47, 50, 53, 63, 66, 71, 83, 84, 88, 90]
res=solution_instance.minimalKSum([292,237,115,317,246,157,159,8287142,205,100,11,547468,309,192,176,186,161,6,218,219,247,1,241,7014388,20,3404746,156,94,33,41,280,164,32,123,8020267,72,279,80,208,155,24,295,288,165,163,3442658,4749815,1047490,4,4271140,262,1960848,9336673,223259,119,107,9699690,196,291,5565113,21,90,5028026,23,195,3779121,38,8060417,259,16,255,50,2396663,146,93,154,301,114,48,137,212,193,134,252,116,168,58,194,124,209,106,44,390517,232,2884251,268,63,68,226,9748695,8,3652066,110,214,308,6654103,182,141,179,263,178,316,4493075,538515,188,56,91,7007595,109,230,265,319,125,8383356,160,285,7,180,3952023,284,190,8256302,43,244,135,598133,27,95,118,207,533228,2954123,40,6992491,133,172,55,122,73,5,10,258,152,7281042,227,8392450,313,86,51,98,158,162,3857053,17,7592899,239,132,12,7831881,272,206,62,175,203,45,7502340,139,47,60,294,228,34,9080425,201,9349871,46,140,177,1579205,269,2613551,7743473,9279785,6658958,79,92,254,14,2181957,225,151,22,6212013,8992736,202,345376,30,25,271,6140681,19,240648,105,112,36,150,256,312,1599154,220,170,299,5308325,9,5705445,6517938,167,3496034,267,83,184,750523,189,199,153,287,298,210,74,277,103,99,61,236,3194037,9866052,67,9000812,76,305,7037871,3,8330343,200,9580394,6476493,97,148,270,174,7618254,84,273,242,145,286,1252645,9873801,128,6085631,82,187,300,320,5252870,3212960,307,276,6115099,238,306,264,81,8569137,88,5044046,304,71,31,4481813,587587,275,138,3057130,37,42,120,6349956,129,229,53,274,261,311,169,250,322,1235200,185,699215,9525494,283,4181959,835751,173,8606516,6163263,321,89,147,8598226,9994813,1865041,315,282,1672861,197,240,3043589,78,64,2,243,77,289,9812228,302,204,245,1567018,3074022,136,7016432,5256867,52,281,318,149,113,181,217,166,75,35,8371869,215,130,3609464,593053,4029934,1306302,59,49,111,18,26,213,6816648,96,66,126,563785,57,253,39,266,7123982,278,65,290,15,233,127,85,248,224,9732773,7291430,104,143,121,211,183,108,222,69,102,81012,1428510,142,296,216,293,303,144,28,13,235,9847773,260,54,223,4980552,231,117,9209324,310,221,249,191,580855,251,234,87,314,70,2009479,7752845,7156837,8078143,131,198,257,29,101,297,4022270,171],6726623)
print(res)
res=solution_instance.minimalKSum([96,44,99,25,61,84,88,18,19,33,60,86,52,19,32,47,35,50,94,17,29,98,22,21,72,100,40,84],35)